# If문의 간단한 예제
cars = ['audi', 'bmw', 'subaru', 'toyota']

for car in cars:
    if car == 'bmw':
        print(car.upper())
    else:
        print(car.title())
"""
if문은 먼저 car의 현재 값이 'bmw'인지 체크한다 ==는 관계연사자로 서로의 값이
같으면 True를 반환한다 =를 쓰게 되면 car에 다른값이 들어가 무한루프 현상이 벌어질수
있다 조심하자 car의 현재값이 'bmw'가 아니라면 else로 가서 첫 글자만 대문자로
바뀌어서 출력이된다
"""
# 조건 테스트
"""
모든 if 문의 핵심에는 True 또는 False로 평가되는 표현식이 있으며 이를 조건
테스트라 부른다. 파이썬은 True와 False 값을 기준으로 if 문 안에 있는 코드를
실행할지 결정한다 조건 테스트가 True로 평가되면 파이썬은 if 문 다음에 잇는 코드를
실행한다 테스트가 False로 평가되면 파이썬은 if 문 다음에 있는 코드를 무신한다
"""
# 동일성 체크하기
"""
car = 'bmw' ...1
car == 'bmw' ...2
1행은 그동안 여러 번 봤던 것처럼 등호 한 개를 써서 car의 값을 'bmw'로 정했다
2행은 등호 두 개(==)를 써서 car의 값이 'bmw'인지 체크한다 ==는 동일 연산자로
연사자 왼쪽과 오른쪽 값이 일치하면 True를 일치하지 않으면 False를 반환한다
car = 'audi' ...3
car =='bmw' ...4
3의 행은 car의 값을 'audi'로 정한다는 뜼이다 반면 4의 등호 두 개는 car의 값이
'bmw' 인지를 질문하는 것이다 대부분의 프로그래밍 언어는 등호를 이런방식으로
사용한다
"""
# 일치하는지 체크할 때 대소문자 무시하기
"""
car = 'Audi'
car == 'audi'
>>> car = 'Audi'
>>> car == 'audi'
False
파이썬은 대소문자를 구분하므로 같은 영문이라도 대소문자가 다른 값은 다르다고 판단한다
대소문자가 중요하다면 이런 방식의 덕을 볼수 있다 하지만 대소문자가 중요하지 않고 그저
변수의 값을 테스트하기만 할 거라면 비교하기 전에 변수의 값을 소문자로 바꾸면 된다
>>> car = 'Audi'
>>> car.lower() == 'audi'
True
이렇게 하면 이제 테스트는 대소문자를 구분하지 않으므로 'Audi'의 대소문자와 관계없이
True를 반환한다. lower()함수 car에 저장된 값을 바꾸지 않고 비교할 때만 소문자
로 변환하므로 변수에는 어떤 영향도 주지 않는다
"""
